name: action-test
on:
  workflow_dispatch:
    inputs:
      distinct_id:
      repo:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
        run: echo ${{ github.event.inputs.distinct_id }}
      - name: Checkout student repo
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          path: student
          token: ${{ secrets.token }}
          fetch-depth: 0 
          
        
      - name: hub
        run: git clone https://github.com/leol0ps/hub
      - name: Checkout2
        uses: actions/checkout@v4
        with:
          path: 'problem'
          ref: 'main'
          repository: 'leol0ps/backup-tcc'
          token: '${{ secrets.BASE_REPO}}'
          persist-credentials: true
      - name: Build boca-jail-fixed image
        run: |
          cd hub
          docker build -f boca-jail.Dockerfile -t boca-jail-fixed .
      - name: Updocker
        shell: bash
        run: |
            cp hub/docker-compose.yml problem/ 
            cd problem/
            docker compose up -d
      - name: Install dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: install
        working-directory: .
        run: |
          cd problem/
          yarn init -y
          yarn add --dev @playwright/test
          cd ..
      - name: Install Playwright Browsers
        run: npx playwright install chromium
      - name: Copy files
        run: | 
          ls
          cd student/
          cp -r problemas ../problem/ 
          cd ..
          cp hub/contest.spec.ts problem/
          cd problem/
          ls
      - name: Get changed .c files from last commit
        id: changed_files
        run: |
          cd student
          git fetch origin main
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          grep '^problemas/.*/.*\.c$' changed_files.txt > filtered.txt || true
          cut -d'/' -f2 filtered.txt | sort -u > exercises.txt
          echo "Exerc√≠cios modificados:"
          cat exercises.txt
          cp exercises.txt ../problem/


          
      - name: Run test
        shell: bash
        run: |
          cd problem/
          npx playwright test 2>&1| tee log.txt
      - name: Log Jail Output
        run: docker logs $(docker ps -q --filter "name=boca-jail")
      - name: Commit individual para cada exerc√≠cio
        run: |
          cd student/
          git config --global user.name "leol0ps"
          git config --global user.email "leotimao2@hotmail.com"
          git remote set-url origin https://x-access-token:${{ secrets.token }}@github.com/${{ github.event.inputs.repo }}

          while IFS= read -r EXER; do
            RESPOSTA_FILE="../problem/problemas/$EXER/resposta.txt"
            DESTINO="problemas/$EXER/resposta.txt"
            
            if [[ -f "$RESPOSTA_FILE" ]]; then
              mkdir -p "problemas/$EXER"
              cp "$RESPOSTA_FILE" "$DESTINO"

              RAW_RESULT=$(cat "$RESPOSTA_FILE")
              
              if [[ "$RAW_RESULT" == "YES" ]]; then
                MESSAGE="üéà YES ‚Äì Submiss√£o aceita"
              elif [[ "$RAW_RESULT" == "" ]]; then
                MESSAGE="‚ùì Resultado n√£o encontrado no log"
              else
                MESSAGE="‚ùå $RAW_RESULT"
              fi

              git add "$DESTINO"
              git commit --allow-empty -m "$MESSAGE"
            else
              echo "‚ö†Ô∏è Arquivo de resposta n√£o encontrado para $EXER"
            fi
          done < ../problem/exercises.txt

          git push

