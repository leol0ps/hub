name: action-test
on:
  workflow_dispatch:
    inputs:
      distinct_id:
      repo:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
        run: echo ${{ github.event.inputs.distinct_id }}
      - name: Checkout
        run: |
          git clone https://${{ secrets.token }}@github.com/${{ github.event.inputs.repo }}.git
          
        
      - name: hub
        run: git clone https://github.com/leol0ps/hub
      - name: Checkout2
        uses: actions/checkout@v4
        with:
          path: 'problem'
          ref: 'main'
          repository: 'leol0ps/backup-tcc'
          token: '${{ secrets.BASE_REPO}}'
          persist-credentials: true
      - name: Build boca-jail-fixed image
        run: |
          cd hub
          docker build -f boca-jail.Dockerfile -t boca-jail-fixed .
      - name: Updocker
        shell: bash
        run: |
            cp hub/docker-compose.yml problem/ 
            cd problem/
            docker compose up -d
      - name: Install dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: install
        working-directory: .
        run: |
          cd problem/
          yarn init -y
          yarn add --dev @playwright/test
          cd ..
      - name: Install Playwright Browsers
        run: npx playwright install chromium
      - name: Copy files
        run: | 
          ls
          cd student/
          cp ans.c ../problem/ 
          cd ..
          cp hub/contest.spec.ts problem/
          cd problem/
          ls
      - name: Check ans.c contents
        run: |
          cat problem/ans.c
          ls -lh problem/ans.c

          
      - name: Run test
        shell: bash
        run: |
          cd problem/
          npx playwright test 2>&1| tee log.txt
          cp log.txt ../student
          cp screenshot.png ../student
      - name: Extract BOCA temp directory and copy stdout/stderr
        run: |
          CONTAINER_ID=$(docker ps -q --filter "name=boca-jail")
          BOCA_DIR=$(docker logs $CONTAINER_ID 2>&1 | grep -oP 'Using directory \K\S+' | tail -1)
          BOCA_DIR_BASENAME=$(basename "$BOCA_DIR")
          echo "BOCA_DIR_BASENAME=$BOCA_DIR_BASENAME" >> $GITHUB_ENV
          mkdir -p saida
          docker cp $CONTAINER_ID:/home/bocajail/tmp/$BOCA_DIR_BASENAME/stdout ./saida/stdout || true
          docker cp $CONTAINER_ID:/home/bocajail/tmp/$BOCA_DIR_BASENAME/stderr ./saida/stderr || true
          cp -r saida student/

      - name: Log Jail Output
        run: docker logs $(docker ps -q --filter "name=boca-jail")
      - name: Commit result as message
        run: |
          cd student/
          git config --global user.name "leol0ps"
          git config --global user.email "leotimao2@hotmail.com"
          git remote set-url origin https://x-access-token:${{ secrets.token }}@github.com/${{ github.event.inputs.repo }}

          # Extrai linha com resultado do log
          RESULT=$(grep -E 'Found "(YES|NO[^"]*)"' log.txt | head -n1 | cut -d'"' -f2)

          if [[ "$RESULT" == "YES" ]]; then
            MESSAGE="🎈 YES – Submissão aceita"
              if [[ -f ans.c ]]; then
                echo "/* $MESSAGE */" | cat - ans.c > temp && mv temp ans.c
              fi
              git add ans.c
              git commit --allow-empty -m "$MESSAGE"
              git push
              exit 0
          elif [[ "$RESULT" == "" ]]; then
            MESSAGE="❓ Resultado não encontrado no log"
          else
            MESSAGE="❌ $RESULT"
            fi
            # Adiciona comentário no início do código
            if [[ -f ans.c ]]; then
              echo "/* $MESSAGE */" | cat - ans.c > temp && mv temp ans.c
            fi

            echo "Commit message: $MESSAGE"
            git add ans.c
            git add screenshot.png
            git add saida
            git commit --allow-empty -m "$MESSAGE"
            git push

      
